#!/usr/bin/env bash
#
# /usr/local/xbin
#
# Description: # Script to convert OS X .webloc's into Linux .desktop files
#
# Disclainer: You use this script AT YOUR OWN RISK, and it comes with NO WARRANTY.
# It's been made for my own personal use.
#

# Put a log on Desktop of the ones who didn't make it.
dtLog="$HOME/desktop/"$(basename $0)'_log.txt';
#dtLog="./urls/"$(basename $0)'_log.txt';
echo -e "/* These \"weblocs\" didn't convert into \".desktop\" */\n\n- - -\n\n" > "${dtLog}";

find . -name "*.webloc" | while read _file; do
	# Clean up names (:/ -> -). More chars?
	cleanUp=`basename "$(echo "${_file}")" | sed 's/[\/\:]/\-/g'`;

	# cleaning any xtra ":" just in case. "/" displays as ":" in Terminal.
	fileOut=`dirname "$(echo "${_file}")/${cleanUp}" | sed 's/[\:]/\-/g'`;

	# New extension
	dtFile=`echo "${fileOut}" | sed 's/webloc/desktop/'`;
	dtName=`basename "${fileOut}" | sed 's/.webloc//'`;

	# get url
	dtUrl=`cat "${_file}" | grep -i '<string>.*<\/string>' | sed 's/^.*<string>//;s/<\/string>$//'`;

	# If failing - put the path to the link in a log file.
	if [[ -z "${dtUrl}" ]] ; then
		# Pass filename to logfile if it fails.
		echo "${_file}" >> "${dtLog}";
	else
		cat << WEBLOC > "${dtFile}"
[Desktop Entry]
Encoding=UTF-8
Type=Link
Icon=text-html
Name=$dtName
URL=$dtUrl

WEBLOC

		# Delete the webloc fileOut
		echo -n 'Deleting: ';
		rm -v "${_file}";
	fi

done

# Add date to log
echo -e "\n\n" >> "${dtLog}";
date "+Log created: %F at %X" >> "${dtLog}";
