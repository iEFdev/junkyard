#!/usr/bin/env bash
#
# /usr/local/bin/n2rgb
#
# Description: web color names -> rgb(a) values
#
_version='1.0.1 (Sept 11, 2014)';		# September 11, 2014 - 03:59:19 
_copy='Copyright (C) 2014, Eric F';
#


# vars
_mode=$1;
_base=`basename $0`;
#_text='n2rgb_rgb.txt';
_text='/usr/X11/share/X11/rgb.txt';
cy="\033[0;36m";		# cy = cyan normal color
cl="\033[0m";		# cl = empty color (eg reset)
_a='';


# Function __help()
function __help()
{
	cat << HELP
NAME

    $_base :: (name to rgb)


DESCRIPTION

    A small tool to get the rgb(a) numbers from web color names.

    The list with rgb/names is taken from X11:
    /usr/X11/share/X11/rgb.txt


OPTIONS

    -a    Triggers the rgba mode.
    
    --help
    -h    This information


EXAMPLES

    $_base color names            # rgb(0,0,0)       /* name */
    $_base -a color names         # rgba(0,0,0,1.0)  /* name */

    Except for specific color names, try a names like medium, dark, light
    and you get all versions of "medium" (all colors)

    $_base -a medium dark light


VERSION

    $_base: $_version
    $_copy

HELP
	exit 1;
}

case $_mode in
	-a)
		shift
		_a='A';
		;;

	-h|--help)
		__help;
		;;

	-V|--version)
		echo -e "$cy$_base$cl: $_version\n$_copy";
		exit 1;
		;;
	
	-*|'')
		echo -e "Usage: $cy$_base$cl: [-a] color names ..."
		echo -e "Help:  $cy$_base$cl: [-h|--help]"
		exit 1;
		;;
esac


# Output
_top="\n# RGB$_a\t\t\t\t/* Name(s) */";
_line='# -------------------------------------------------- #\n';

echo -e "$_top";
echo -e $_line;

for _col in ${@}; do

	echo -e "# $_col:";

	if [[ $_mode == '-a' ]]; then # rgba

		awk 'BEGIN{ print OFS="", ORS=" */\n";}
		{print "  rgba("$1","$2","$3",1)  \t\t/* "$4,$5,$6;}' $_text | grep "$_col"
		echo

	else # rgb

		awk 'BEGIN{ print OFS="", ORS=" */\n";}
		{print "  rgb("$1","$2","$3")  \t\t/* "$4,$5,$6;}' $_text | grep "$_col"
		echo

	fi

done

echo -e $_line;

exit 1;

