#!/usr/bin/env bash
#
# /usr/local/xbin/encFile
#
# Description: Encrypt or Decrypt files with openssl
#

ERR=0;

# Usage
function __err()
{
    cat <<INFO
Usage:
    Encrypt: $(basename $0) [ bf | aes ] <file>      # default: bf
    Decrypt: $(basename $0) <file>

INFO
}

# Help
[[ ${1} == '-h' || $# < 1 ]] && __err && exit 1;

# bf or aes
[[ ${1} =~ ^bf$|^aes$|^aes256$ ]] && _c="${1}" && shift 1 || _c='bf';

# Vars
_file="${1}";
[[ ${_file##*.} == 'bf' ]] && _enc='bf';
[[ ${_file##*.} == 'aes' ]] && _enc='aes256';

# Check file
if [[ -d "${_file}" || ! -f "${_file}" ]]; then
    echo -e "\"${_file}\" is not a valid or existing file.\n";
    __err && exit 1;

# Encrypt
elif [[ -n ${_c} && -z ${_enc} ]]; then
    [ ${_c} == 'aes' ] && _c='aes256';
    openssl enc -${_c} -A -in "${_file}" > "${_file}.${_c//256/}";
    ERR=$?;

# Decrypt
else
    openssl enc -${_enc} -A -d -in "${_file}" > "${_file%.*}";
    ERR=$?;
fi

exit $ERR;
